function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 03-Jun-2023 22:04:28.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;-189;0;0;0;0];
x1_step1.gain = [0.0020296326364928;0.00202231904840696;0.00449438202247191;0.02;0.2;0.00815538128802624;0.02];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.26581204524673424094;-2.9695045641355055643;0.70533032336348699953;-0.79364076975322328522;0.64504055705142571142;-0.42208165570294187141;2.0965760238392934234;1.3277052959713280256;0.43085504942537583561;-0.39732845249575837743;0.69483668435534129415;1.2295400251329247077;1.6585620782213961188;-1.8443283304514206389;-1.2716876572521496058];
IW1_1 = [-0.5949232572421695453 -0.29994158605791676475 1.5254710158726036973 0.20888579280620628298 0.20888579280611496714 0.48579245282261307448 -0.24003986149409439754;1.8685785634107798803 1.3217353435567400499 0.39403613229265693763 -0.045426169404338141711 -0.045426169406343863688 0.48684164512041466777 0.76391378392999931268;0.67545661643381538219 1.7276361870226020212 0.99611792532342668949 -0.013995863958484514727 -0.013995863959195121648 -1.2007499300395398922 0.46367461028135903423;-0.26553420862996651719 0.68224026583550523295 -1.3871796282872528305 -0.44089894815598795752 -0.44089894815743974066 0.8482410497969719021 0.57537417850468419722;-0.26572345433228911071 -0.057353505280754710216 -1.5922607644139792349 0.34230135731710820135 0.34230135731682825861 -2.486839546386982569 -0.13763059340069561109;1.5018500196114439316 -0.94302204835969050123 -1.592316091574949688 -0.43624075269846196434 -0.4362407527025327636 -0.11144464889319673218 0.73723729702904416961;-1.7080891451156006156 0.55714823824915127304 -0.73568230088195629701 -0.097203738193649372179 -0.097203738202160494541 -3.567006803036711915 -1.1060051889301292238;-1.9625966074777798642 -1.5515752340229287398 -0.90002595073095170708 0.02117471992540917794 0.021174719924673113952 0.32455694377460880817 -0.82432034244009788626;-0.46280703793799615742 0.67437617889543333138 0.87496337392539380584 -0.27953427788835499834 -0.27953427788920842678 0.12545842001092613605 0.059193484753098449258;0.33960521893667916515 -0.1345063115058000025 -0.50324130633260022449 -0.37979238078757615593 -0.37979238078641874843 0.84119447139947056691 0.28355550480431679361;-0.58482362670085252798 1.1843226224795855295 -1.4253360611298531158 -0.28526410982192385024 -0.2852641098183987256 -2.0740520241052031736 0.5022737605723904819;0.62384021163351233152 -1.6237318780993377221 -0.64422256751182482848 -0.079376296672089272088 -0.079376296678550922747 -2.0506120280416935131 -1.0220559081966151815;-1.397073082586896442 1.7898415087565586745 0.53104526706698340632 0.086707274276659709877 0.086707274286001528862 -2.9803835122973700855 0.3855030088788671816;-2.05691660499987794 1.7728253466053265353 -1.1366409704070026265 -0.13340575890602809905 -0.13340575890732916942 3.0003570621682933428 -0.18041265154651650593;0.27588953039506530773 0.96058098890443832651 -0.11760800493684439583 -0.022951348849502853366 -0.022951348850873503488 0.33392433370992380404 0.37722243308385894345];

% Layer 2
b2 = [-0.13075818248702375524;-0.14486483100630773158];
LW2_1 = [-0.89687664769295794009 0.96295647941591178132 0.66904317030869897565 -2.0750988756974346749 0.057316876794573375087 1.8714495407150375517 -1.1390778191261705654 -0.40396248828003711306 -0.28390703398014410785 1.2044734983477274337 -1.7611058517705904247 1.600563379930337593 2.1868790869055696469 1.8628976575254720949 -2.1087468405430804808;-0.59149412913611987275 1.0944398139123643343 0.7550525961084857407 -1.4672530906676983786 -0.21346810867860391281 1.265266883878921389 -1.1558237908747979183 -0.46206089714497611265 -0.69486111559024343887 0.9274525134779006974 -1.1120782950208027984 1.5817045054833165363 1.7552523031427624822 1.6187229463820105302 -2.412368839612974547];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.00196078431372549;0.002];
y1_step1.xoffset = [0;0];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
